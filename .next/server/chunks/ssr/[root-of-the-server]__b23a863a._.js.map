{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Usu%C3%A1rio/biblioteca-modicificada/biblioteca-frontend/src/app/lib/books.ts"],"sourcesContent":["export interface Book {\r\n  id: string;\r\n  title: string;\r\n  author: string;\r\n  cover: string;\r\n}\r\n\r\nexport async function getFrontendBooks(): Promise<Book[]> {\r\n  const res = await fetch(\r\n    \"https://www.googleapis.com/books/v1/volumes?q=frontend+development&printType=books&langRestrict=en&maxResults=20\"\r\n  );\r\n\r\n  const data = await res.json();\r\n\r\n  if (!data.items) return [];\r\n\r\n  return data.items.map((item: any) => ({\r\n    id: item.id,\r\n    title: item.volumeInfo.title || \"Título desconhecido\",\r\n    author: item.volumeInfo.authors ? item.volumeInfo.authors.join(\", \") : \"Autor desconhecido\",\r\n    cover: item.volumeInfo.imageLinks?.thumbnail || \"\",\r\n  }));\r\n}"],"names":[],"mappings":";;;AAOO,eAAe;IACpB,MAAM,MAAM,MAAM,MAChB;IAGF,MAAM,OAAO,MAAM,IAAI,IAAI;IAE3B,IAAI,CAAC,KAAK,KAAK,EAAE,OAAO,EAAE;IAE1B,OAAO,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,OAAc,CAAC;YACpC,IAAI,KAAK,EAAE;YACX,OAAO,KAAK,UAAU,CAAC,KAAK,IAAI;YAChC,QAAQ,KAAK,UAAU,CAAC,OAAO,GAAG,KAAK,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ;YACvE,OAAO,KAAK,UAAU,CAAC,UAAU,EAAE,aAAa;QAClD,CAAC;AACH","debugId":null}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Usu%C3%A1rio/biblioteca-modicificada/biblioteca-frontend/src/app/components/BookCard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Book } from \"@/app/lib/books\";\r\nimport Link from \"next/link\";\r\nimport { Star } from \"lucide-react\";\r\n\r\ninterface BookCardProps extends Book {\r\n  isFavorito: boolean;\r\n  onToggleFavorito: (book: Book) => void;\r\n}\r\n\r\nexport default function BookCard({\r\n  id,\r\n  title,\r\n  author,\r\n  cover,\r\n  isFavorito,\r\n  onToggleFavorito,\r\n}: BookCardProps) {\r\n  const handleFavorito = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    onToggleFavorito({ id, title, author, cover });\r\n  };\r\n\r\n  return (\r\n    <Link href={`/livro/${id}`} className=\"relative\">\r\n      <div className=\"bg-gradient-to-br from-blue-600 to-blue-400 shadow-lg p-4 rounded-lg text-center transform transition hover:scale-105 hover:shadow-2xl cursor-pointer relative\">\r\n        <button\r\n          onClick={handleFavorito}\r\n          className={`absolute top-2 right-2 ${\r\n            isFavorito ? \"text-yellow-400\" : \"text-white\"\r\n          }`}\r\n        >\r\n          <Star size={20} />\r\n        </button>\r\n\r\n        <img\r\n          src={cover || \"https://via.placeholder.com/150x220?text=Sem+Capa\"}\r\n          alt={title || \"Livro sem título\"}\r\n          className=\"mx-auto h-40 w-32 object-cover rounded-md border border-blue-300\"\r\n        />\r\n        <h3 className=\"mt-3 font-semibold text-white\">{title || \"Título desconhecido\"}</h3>\r\n        <p className=\"text-sm text-blue-100\">{author || \"Autor desconhecido\"}</p>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAWe,SAAS,SAAS,EAC/B,EAAE,EACF,KAAK,EACL,MAAM,EACN,KAAK,EACL,UAAU,EACV,gBAAgB,EACF;IACd,MAAM,iBAAiB,CAAC;QACtB,EAAE,cAAc;QAChB,EAAE,eAAe;QACjB,iBAAiB;YAAE;YAAI;YAAO;YAAQ;QAAM;IAC9C;IAEA,qBACE,8OAAC,4JAAA,CAAA,UAAI;QAAC,MAAM,CAAC,OAAO,EAAE,IAAI;QAAE,WAAU;kBACpC,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBACC,SAAS;oBACT,WAAW,CAAC,uBAAuB,EACjC,aAAa,oBAAoB,cACjC;8BAEF,cAAA,8OAAC,kMAAA,CAAA,OAAI;wBAAC,MAAM;;;;;;;;;;;8BAGd,8OAAC;oBACC,KAAK,SAAS;oBACd,KAAK,SAAS;oBACd,WAAU;;;;;;8BAEZ,8OAAC;oBAAG,WAAU;8BAAiC,SAAS;;;;;;8BACxD,8OAAC;oBAAE,WAAU;8BAAyB,UAAU;;;;;;;;;;;;;;;;;AAIxD","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Usu%C3%A1rio/biblioteca-modicificada/biblioteca-frontend/src/app/components/BookList.tsx"],"sourcesContent":["import BookCard from \"./BookCard\";\r\nimport { Book } from \"@/app/lib/books\";\r\n\r\ninterface BookListProps {\r\n  books?: Book[];\r\n}\r\n\r\nexport default function BookList({ books }: BookListProps) {\r\n  if (!books || books.length === 0) {\r\n    return (\r\n      <p className=\"text-center text-blue-100 mt-10\">\r\n        Nenhum livro disponível.\r\n      </p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 mt-6\">\r\n      {books.map((book, index) => (\r\n        <BookCard key={book.cover || index} {...book} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;;;AAOe,SAAS,SAAS,EAAE,KAAK,EAAiB;IACvD,IAAI,CAAC,SAAS,MAAM,MAAM,KAAK,GAAG;QAChC,qBACE,8OAAC;YAAE,WAAU;sBAAkC;;;;;;IAInD;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,8OAAC,qIAAA,CAAA,UAAQ;gBAA4B,GAAG,IAAI;eAA7B,KAAK,KAAK,IAAI;;;;;;;;;;AAIrC","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Usu%C3%A1rio/biblioteca-modicificada/biblioteca-frontend/src/app/hook/useFavoritos.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Book } from \"@/app/lib/books\";\r\n\r\nconst API_URL = \"http://localhost:5000/api/favorites\";\r\n\r\nexport function useFavoritos() {\r\n  const [favoritos, setFavoritos] = useState<string[]>([]);\r\n\r\n  // Carrega os favoritos do backend ao iniciar\r\n  useEffect(() => {\r\n    const fetchFavoritos = async () => {\r\n      try {\r\n        const res = await fetch(API_URL);\r\n        const data: Book[] = await res.json();\r\n        setFavoritos(data.map((book) => book.id));\r\n      } catch (err) {\r\n        console.error(\"Erro ao buscar favoritos:\", err);\r\n      }\r\n    };\r\n    fetchFavoritos();\r\n  }, []);\r\n\r\n  // Adiciona ou remove favorito\r\n  const toggleFavorito = async (book: Book) => {\r\n    try {\r\n      let updated: string[];\r\n\r\n      if (favoritos.includes(book.id)) {\r\n        // Remove do backend\r\n        await fetch(`${API_URL}/${book.id}`, { method: \"DELETE\" });\r\n        updated = favoritos.filter((f) => f !== book.id);\r\n      } else {\r\n        // Adiciona no backend\r\n        await fetch(API_URL, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(book),\r\n        });\r\n        updated = [...favoritos, book.id];\r\n      }\r\n\r\n      setFavoritos(updated);\r\n    } catch (err) {\r\n      console.error(\"Erro ao atualizar favoritos:\", err);\r\n    }\r\n  };\r\n\r\n  return { favoritos, toggleFavorito };\r\n}\r\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAKA,MAAM,UAAU;AAET,SAAS;IACd,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAEvD,6CAA6C;IAC7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,iBAAiB;YACrB,IAAI;gBACF,MAAM,MAAM,MAAM,MAAM;gBACxB,MAAM,OAAe,MAAM,IAAI,IAAI;gBACnC,aAAa,KAAK,GAAG,CAAC,CAAC,OAAS,KAAK,EAAE;YACzC,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,6BAA6B;YAC7C;QACF;QACA;IACF,GAAG,EAAE;IAEL,8BAA8B;IAC9B,MAAM,iBAAiB,OAAO;QAC5B,IAAI;YACF,IAAI;YAEJ,IAAI,UAAU,QAAQ,CAAC,KAAK,EAAE,GAAG;gBAC/B,oBAAoB;gBACpB,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;oBAAE,QAAQ;gBAAS;gBACxD,UAAU,UAAU,MAAM,CAAC,CAAC,IAAM,MAAM,KAAK,EAAE;YACjD,OAAO;gBACL,sBAAsB;gBACtB,MAAM,MAAM,SAAS;oBACnB,QAAQ;oBACR,SAAS;wBAAE,gBAAgB;oBAAmB;oBAC9C,MAAM,KAAK,SAAS,CAAC;gBACvB;gBACA,UAAU;uBAAI;oBAAW,KAAK,EAAE;iBAAC;YACnC;YAEA,aAAa;QACf,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,gCAAgC;QAChD;IACF;IAEA,OAAO;QAAE;QAAW;IAAe;AACrC","debugId":null}}]
}