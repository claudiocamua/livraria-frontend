{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Usu%C3%A1rio/biblioteca-modicificada/biblioteca-frontend/src/app/settings/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, ChangeEvent, useEffect } from \"react\";\r\n\r\nexport default function ConfiguracoesPage() {\r\n  const [notificacoes, setNotificacoes] = useState(true);\r\n  const [tema, setTema] = useState(\"claro\");\r\n  const [fotoPerfil, setFotoPerfil] = useState<File | null>(null);\r\n  const [previewFoto, setPreviewFoto] = useState<string | null>(null);\r\n  const [fotoUrlAtual, setFotoUrlAtual] = useState<string | null>(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // Efeito para carregar as configurações do usuário ao montar o componente\r\n  useEffect(() => {\r\n    const fetchUserSettings = async () => {\r\n      setIsLoading(true);\r\n      setMessage(\"\");\r\n\r\n      const apiUrl = process.env.NEXT_PUBLIC_API_URL;\r\n      if (!apiUrl) {\r\n        setMessage(\"URL da API não configurada.\");\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        setMessage(\"Usuário não autenticado. Faça o login para ver suas configurações.\");\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const res = await fetch(`${apiUrl}/api/user/settings`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (!res.ok) {\r\n          const errorData = await res.json();\r\n          throw new Error(errorData.message || \"Erro ao carregar configurações\");\r\n        }\r\n\r\n        const data = await res.json();\r\n        setNotificacoes(data.user.notifications);\r\n        setTema(data.user.theme);\r\n        setFotoUrlAtual(data.user.profilePicUrl);\r\n        setMessage(\"Configurações carregadas!\");\r\n      } catch (err) {\r\n        setMessage(`Erro ao carregar configurações: ${err.message}`);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserSettings();\r\n  }, []);\r\n\r\n  const handleFotoChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      setFotoPerfil(file);\r\n      setPreviewFoto(URL.createObjectURL(file));\r\n    }\r\n  };\r\n\r\n  const handleSalvar = async () => {\r\n    setIsLoading(true);\r\n    setMessage(\"\");\r\n    let finalFotoUrl = fotoUrlAtual;\r\n\r\n    // Se uma nova foto foi selecionada, faz o upload primeiro\r\n    if (fotoPerfil) {\r\n      const formData = new FormData();\r\n      formData.append(\"foto\", fotoPerfil);\r\n      const apiUrl = process.env.NEXT_PUBLIC_API_URL;\r\n\r\n      try {\r\n        if (!apiUrl) throw new Error(\"URL da API não configurada.\");\r\n\r\n        // CORREÇÃO: Adicionar '/api' à URL de upload\r\n        const res = await fetch(`${apiUrl}/api/uploadProfilePic`, {\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n\r\n        if (!res.ok) {\r\n          const errorData = await res.json();\r\n          throw new Error(errorData.message || \"Erro ao enviar a foto\");\r\n        }\r\n\r\n        const data = await res.json();\r\n        finalFotoUrl = data.path; // URL da nova imagem\r\n      } catch (err) {\r\n        setMessage(`Erro no upload: ${err.message}`);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Envia todas as configurações para o backend\r\n    try {\r\n      const apiUrl = process.env.NEXT_PUBLIC_API_URL;\r\n      if (!apiUrl) throw new Error(\"URL da API não configurada.\");\r\n\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        setMessage(\"Usuário não autenticado. Faça o login novamente.\");\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      const settingsData = {\r\n        theme: tema,\r\n        notifications: notificacoes,\r\n        profilePicUrl: finalFotoUrl,\r\n      };\r\n\r\n      const res = await fetch(`${apiUrl}/api/user/settings`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(settingsData),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errorData = await res.json();\r\n        throw new Error(errorData.message || \"Erro ao salvar configurações\");\r\n      }\r\n\r\n      const updatedData = await res.json();\r\n      setFotoUrlAtual(updatedData.user.profilePicUrl);\r\n      setMessage(\"Configurações salvas com sucesso!\");\r\n    } catch (err) {\r\n      setMessage(`Falha ao salvar: ${err.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleApagarConta = () => {\r\n    // Substituir alert/confirm por um modal customizado para melhor UX\r\n    if (window.confirm(\"Tem certeza que deseja apagar sua conta? Esta ação é irreversível.\")) {\r\n      window.alert(\"Conta apagada!\");\r\n      // Chamada para a API de deletar a conta\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto p-6 mt-10 rounded-2xl shadow-lg\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Configurações</h1>\r\n\r\n      {message && (\r\n        <div className={`p-3 mb-4 rounded-lg ${message.includes('Erro') || message.includes('Falha') ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800'}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      {isLoading && <p className=\"text-blue-500 text-center\">Carregando...</p>}\r\n\r\n      {!isLoading && (\r\n        <div className=\"space-y-4\">\r\n          {/* Notificações */}\r\n          <div className=\"flex items-center justify-between\">\r\n            <span>Notificações</span>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={notificacoes}\r\n              onChange={(e) => setNotificacoes(e.target.checked)}\r\n              className=\"w-5 h-5\"\r\n            />\r\n          </div>\r\n\r\n          {/* Tema */}\r\n          <div>\r\n            <label className=\"block mb-1 font-medium\">Tema</label>\r\n            <select\r\n              value={tema}\r\n              onChange={(e) => setTema(e.target.value)}\r\n              className=\"w-full p-2 border rounded-lg\"\r\n            >\r\n              <option value=\"claro\">Claro</option>\r\n              <option value=\"escuro\">Escuro</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* Foto de perfil */}\r\n          <div>\r\n            <label className=\"block mb-1 font-medium\">Foto do Perfil</label>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={handleFotoChange}\r\n              className=\"w-full p-2 border rounded-lg\"\r\n            />\r\n            {(previewFoto || fotoUrlAtual) && (\r\n              <img\r\n                src={previewFoto || fotoUrlAtual || ''}\r\n                alt=\"Prévia da foto do perfil\"\r\n                className=\"mt-2 w-32 h-32 object-cover rounded-full border\"\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          {/* Botão salvar */}\r\n          <button\r\n            onClick={handleSalvar}\r\n            className=\"mt-6 w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700\"\r\n          >\r\n            Salvar Alterações\r\n          </button>\r\n\r\n          {/* Botão apagar conta */}\r\n          <button\r\n            onClick={handleApagarConta}\r\n            className=\"mt-2 w-full bg-red-600 text-white py-2 rounded-lg hover:bg-red-700\"\r\n          >\r\n            Apagar Conta\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}